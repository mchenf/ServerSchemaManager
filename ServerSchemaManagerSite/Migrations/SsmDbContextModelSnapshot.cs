// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerSchemaManagerSite.Models;

#nullable disable

namespace ServerSchemaManagerSite.Migrations
{
    [DbContext(typeof(SsmDbContext))]
    partial class SsmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServerSchemaManagerSite.Models.SsmRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nchar(4)");

                    b.HasKey("Id");

                    b.ToTable("SsmRegions");
                });

            modelBuilder.Entity("ServerSchemaManagerSite.Models.SsmServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("nchar(16)");

                    b.Property<string>("IPv4")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<byte[]>("IPv4_Internal")
                        .IsRequired()
                        .HasColumnType("binary(4)");

                    b.Property<byte[]>("IPv6_Internal")
                        .IsRequired()
                        .HasColumnType("binary(16)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("UsageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("UsageId");

                    b.ToTable("SsmServers");
                });

            modelBuilder.Entity("ServerSchemaManagerSite.Models.SsmUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nchar(4)");

                    b.HasKey("Id");

                    b.ToTable("SsmUsages");
                });

            modelBuilder.Entity("ServerSchemaManagerSite.Models.SsmServer", b =>
                {
                    b.HasOne("ServerSchemaManagerSite.Models.SsmRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerSchemaManagerSite.Models.SsmUsage", "Usage")
                        .WithMany()
                        .HasForeignKey("UsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Usage");
                });
#pragma warning restore 612, 618
        }
    }
}
